name: Docker

on:
  push:
    # Publish `v2` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: xlaunchfe

jobs:
  cancel:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    needs: cancel
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}" --build-arg "GIT_COMMIT_ID=${GITHUB_SHA}"

      - name: Push image
        run: |
          echo "${{ secrets.XLAUNCH_DEPLOY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
  deploy:
    needs: push
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER_NAME }}
          password: ${{ secrets.PASS_PHRASE }}
          port: 22
          script_stop: true
          script: |
            cd /home/ubuntu/xlaunchfe
            echo "${{ secrets.XLAUNCH_DEPLOY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            docker pull ghcr.io/${{ github.repository_owner }}/xlaunchfe:latest
            docker-compose up -d
          
  notifification:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_URL }}
